import * as w from '../../game/world.model';
import * as StoreProvider from '../storeProvider';

const banned = [
    /^ez$/i,
    /^easy$/i,
    /\b4nal\b/i,
    /\ba.n.a.l\b/i,
    /\ba.u.s.t.i.s.t\b/i,
    /\ba.u.t.i.s.m\b/i,
    /\ba\$\$\b/i,
    /\ban4l\b/i,
    /\banal\b/i,
    /\bass\b/i,
    /\bb.i.t.c.h\b/i,
    /\bb00b\b/i,
    /\bb00bs\b/i,
    /\bbish\b/i,
    /\bbitch\b/i,
    /\bblyad\b/i,
    /\bblyat\b/i,
    /\bbo0bs\b/i,
    /\bboob\b/i,
    /\bboobies\b/i,
    /\bboobs\b/i,
    /\bbullshet\b/i,
    /\bbullshit\b/i,
    /\bc.o.c.k\b/i,
    /\bc.u.n.t\b/i,
    /\bccunt\b/i,
    /\bcocck\b/i,
    /\bcock\b/i,
    /\bcockk\b/i,
    /\bcuck\b/i,
    /\bcucked\b/i,
    /\bcum\b/i,
    /\bcumming\b/i,
    /\bcunt\b/i,
    /\bcuntt\b/i,
    /\bcunty\b/i,
    /\bcyka blyat\b/i,
    /\bd!ck\b/i,
    /\bd1ck\b/i,
    /\bdegroid\b/i,
    /\bdick\b/i,
    /\bdownie\b/i,
    /\berect\b/i,
    /\berection\b/i,
    /\bf u c k\b/i,
    /\bf.a.g\b/i,
    /\bf4g\b/i,
    /\bfag\b/i,
    /\bfagg\b/i,
    /\bfaggo\b/i,
    /\bfaggot\b/i,
    /\bfap\b/i,
    /\bfapping\b/i,
    /\bfcking\b/i,
    /\bfckjng\b/i,
    /\bffag\b/i,
    /\bffuck\b/i,
    /\bfjuck\b/i,
    /\bfking\b/i,
    /\bfkn\b/i,
    /\bfucck\b/i,
    /\bfuccker\b/i,
    /\bfuck off\b/i,
    /\bfuck\b/i,
    /\bfucka\b/i,
    /\bfucked up\b/i,
    /\bfucker\b/i,
    /\bfucking\b/i,
    /\bfuckjing\b/i,
    /\bfuckjng\b/i,
    /\bfuckker\b/i,
    /\bfuckking\b/i,
    /\bfuckkk\b/i,
    /\bfucktard\b/i,
    /\bfuk\b/i,
    /\bfuq\b/i,
    /\bh0m0\b/i,
    /\bh0mo\b/i,
    /\bhiitler\b/i,
    /\bhitler\b/i,
    /\bhomo\b/i,
    /\bhomoo\b/i,
    /\bhoomo\b/i,
    /\bgn the ass\b/i,
    /\bgncel\b/i,
    /\bgncels\b/i,
    /\bgt's gay\b/i,
    /\bgts gay\b/i,
    /\bj!zz\b/i,
    /\bjerk off\b/i,
    /\bjerking off\b/i,
    /\bjizz\b/i,
    /\bjizzing\b/i,
    /\bkill urself\b/i,
    /\bkill yourself\b/i,
    /\bkys\b/i,
    /\blady boy\b/i,
    /\bladyboy\b/i,
    /\blibtard\b/i,
    /\bmother fucker\b/i,
    /\bmotherfucker\b/i,
    /\bmuthafucka\b/i,
    /\bmuthafucker\b/i,
    /\bn i g g e r\b/i,
    /\bn word\b/i,
    /\bn.i.g.g.e.r\b/i,
    /\bn1gg3r\b/i,
    /\bn1gger\b/i,
    /\bnazi\b/i,
    /\bnazii\b/i,
    /\bnegroid\b/i,
    /\bni66a\b/i,
    /\bni66er\b/i,
    /\bnibba\b/i,
    /\bnidger\b/i,
    /\bniga\b/i,
    /\bniger\b/i,
    /\bnigga\b/i,
    /\bnigger\b/i,
    /\bniggur\b/i,
    /\bp0rn\b/i,
    /\bpen15\b/i,
    /\bpetukh\b/i,
    /\bpizda\b/i,
    /\bporn\b/i,
    /\bpr0n\b/i,
    /\bpron\b/i,
    /\bpussi\b/i,
    /\bpusssy\b/i,
    /\bpussy\b/i,
    /\bpussyy\b/i,
    /\brape\b/i,
    /\braped\b/i,
    /\braper\b/i,
    /\bretard\b/i,
    /\bretarded\b/i,
    /\bretart\b/i,
    /\bretarted\b/i,
    /\bs.l.u.t\b/i,
    /\bsex\b/i,
    /\bsh!t\b/i,
    /\bshit\b/i,
    /\bshithead\b/i,
    /\bsjw\b/i,
    /\bslut\b/i,
    /\bslutt\b/i,
    /\bslutty\b/i,
    /\bsluut\b/i,
    /\bsuck my\b/i,
    /\bsuicide\b/i,
    /\bthat's gay\b/i,
    /\bthats gay\b/i,
    /\bthot\b/i,
    /\btits\b/i,
    /\btitties\b/i,
    /\btitty\b/i,
    /\btranny\b/i,
    /\bup your ass\b/i,
    /\bvagene\b/i,
    /\bvagina\b/i,
    /\bw.h.o.r.e\b/i,
    /\bwank\b/i,
    /\bwanker\b/i,
    /\bwanking\b/i,
    /\bwhore\b/i,
    /\bБля\b/i,
    /\bблять\b/i,
    /\bв попуу\b/i,
    /\bвыебу\b/i,
    /\bдауны\b/i,
    /\bебал\b/i,
    /\bебать\b/i,
    /\bебля\b/i,
    /\bебу\b/i,
    /\bебут\b/i,
    /\bебуууут\b/i,
    /\bжопа\b/i,
    /\bзаебали пиздеть\b/i,
    /\bзаебали\b/i,
    /\bнахуй\b/i,
    /\bпенис\b/i,
    /\bпетух\b/i,
    /\bпидорасы\b/i,
    /\bпизда\b/i,
    /\bпиздит\b/i,
    /\bсучка\b/i,
    /\bуебан\b/i,
    /\bхуй\b/i,
    /\bшлюха\b/i,
    /\breturded\b/i,
    /\bgey\b/i,
    /\bnigs\b/i,
];

export function excludeIfNecessary(notifications: w.TextNotification[]) {
    const state = StoreProvider.getState();
    const selfHash = state.userHash;

    const add = new Array<string>();
    notifications.forEach(notif => {
        if (notif.userHash !== selfHash && banned.some(r => r.test(notif.text))) {
            add.push(notif.userHash);
        }
    });

    if (add.length > 0) {
        StoreProvider.dispatch({ type: "updateSilence", add });
    }
}